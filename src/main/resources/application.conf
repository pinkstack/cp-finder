include "akka-reference.conf"
include "akka-http-core-reference.conf"
include "akka-http-reference.conf"
include "akka-kafka-reference.conf"

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO" # "DEBUG" # "WARNING" # "DEBUG" "DEBUG" #
  loglevel = ${?AKKA_LOG_LEVEL}
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  stdout-loglevel = "DEBUG"

  log-dead-letters = 100
  log-dead-letters-during-shutdown = on

  extensions = [akka.persistence.Persistence]

  # actor.warn-about-java-serializer-usage = on
  # actor.allow-java-serialization = off
  actor.allow-java-serialization = off

  actor.serializers {
    jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
    jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"

    akka-persistence-snapshot = "akka.persistence.serialization.SnapshotSerializer"
    akka-persistence-message = "akka.persistence.serialization.MessageSerializer"
  }

  actor.serialization-bindings {
    #"docs.serialization.JsonSerializable" = jackson-json
    #"docs.serialization.CborSerializable" = jackson-cbor

    "com.pinkstack.CborSerializable" = jackson-cbor

    "akka.persistence.serialization.Snapshot" = akka-persistence-snapshot
    "akka.persistence.serialization.Message" = akka-persistence-message
  }

  persistence {
    journal {
      # Maximum size of a persistent message batch written to the journal.
      # max-message-batch-size = 200

      # Maximum size of a confirmation batch written to the journal.
      # max-confirmation-batch-size = 10000

      # Maximum size of a deletion batch written to the journal.
      # max-deletion-batch-size = 10000

      leveldb {
        native = on
        dir = "tmp/journal"
        fsync = on
        checksum = off
      }

      plugin = "akka.persistence.journal.leveldb"
      auto-start-journals = ["akka.persistence.journal.leveldb"]
    }

    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]

      local.dir = "tmp/snapshots"
    }

    query.journal.leveldb {
      # Implementation class of the LevelDB ReadJournalProvider
      class = "akka.persistence.query.journal.leveldb.LeveldbReadJournalProvider"

      # Absolute path to the write journal plugin configuration entry that this
      # query journal will connect to. That must be a LeveldbJournal or SharedLeveldbJournal.
      # If undefined (or "") it will connect to the default journal as specified by the
      # akka.persistence.journal.plugin property.
      write-plugin = ""

      # The LevelDB write journal is notifying the query side as soon as things
      # are persisted, but for efficiency reasons the query side retrieves the events
      # in batches that sometimes can be delayed up to the configured `refresh-interval`.
      refresh-interval = 3s

      # How many events to fetch in one query (replay) and keep buffered until they
      # are delivered downstreams.
      max-buffer-size = 100
    }
  }
}

cp-finder {

}
